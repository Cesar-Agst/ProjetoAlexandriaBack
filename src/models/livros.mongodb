
//Selecione o database
use('LivrosDB')

// Remove a collection
db.livros.drop()

/* Cria a collection com a validação do schema
   Saiba mais em: https://docs.mongodb.com/manual/core/schema-validation/
*/
db.createCollection('livros', {
    validator: {
        $jsonSchema: $jsonSchema: {
            bsonType: 'object',
            required: ['nome'],
            properties: {
                nome: {
                    bsonType: 'string',
                    minLength: 1,
                    maxLength: 50,
                    description: 'Nome do livro é obrigatório'
                },
                autor: {
                    bsonType: 'string',
                    description: 'Nome do autor é obrigatório'
                },
                publicação: {
                    bsonType: 'double',
                    minimum: 1,
                    maximum: 2022,
                   description: "O ano de publicação do livro deve ser entre o ano 1 até 2022"
                },
                  gênero: {
                    bsonType: 'string',
                    description: 'O gênero do livro é obrigatório'
                }

      
            }
        }
                      
                 
    },
    validationLevel: 'off', //strict-> aplica no insert e no update. moderate apenas no insert or off
    validationAction: 'error' //error->rejeita o documento ou warn->registra no log mas permite a inclusão

})

//Insere um novo registro
db.livros.insertOne({
    "nome": "5 minutos",
    "autor": "José de Alencar",
    "publicação": "1856",
    "gênero": "Romance",
    
})

//Lista um registro pelo Id
db.livros.find({ '_id': { $eq: ObjectId('61891d38a64a453659f55c56') } })

//Lista um registro por parte do nome (i=insensitive case)
db.livros.find({ nome: { $regex: '5 minutos', $options: "i" } })

